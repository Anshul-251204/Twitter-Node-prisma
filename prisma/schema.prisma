generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String?
  username  String      @unique
  email     String      @unique
  password  String?     @db.VarChar(255)
  avatar    Json?
  tagList   String?     @db.VarChar(70)
  bio       String?     @db.VarChar(150)
  private   Boolean     @default(false)
  blueTick  Boolean     @default(false)
  posts     Post[]
  likespost Like[]
  comments  Comment[]
  friends   Friend[]    @relation("UserFriends")
  followers Friend[]    @relation("UserFollowers")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  SavedPost SavedPost[]
  payment   Payments?
  paymentId Int?        @unique
}

model Post {
  id        Int         @id @default(autoincrement())
  content   String      @db.VarChar(250)
  image     Json?
  published Boolean     @default(false)
  likes     Like[]
  owner     User        @relation(fields: [ownerId], references: [id])
  ownerId   String
  Comments  Comment[]
  savedby   SavedPost[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Like {
  id     Int    @id @default(autoincrement())
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String @db.VarChar(100)
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model SavedPost {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId Int

  @@id([postId, userId])
}

model Friend {
  id         Int    @id @default(autoincrement())
  user       User   @relation("UserFriends", fields: [userId], references: [id])
  userId     String
  follower   User   @relation("UserFollowers", fields: [followerId], references: [id])
  followerId String
}

model Payments {
  id            Int      @id
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique
  payment       Boolean
  paymentExpire DateTime
}
